//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestHubGatewayService.AlarmService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveAlarmDto", Namespace="http://schemas.datacontract.org/2004/07/Siskon.Alarm.Domain.Model.HubInterfaces.D" +
        "TO")]
    [System.SerializableAttribute()]
    public partial class ActiveAlarmDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestHubGatewayService.AlarmService.AlarmStatus AlarmStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClearedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NodeElementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProbableCauseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestHubGatewayService.AlarmService.Severity SeverityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShelterDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceElementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TypeCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressExtension {
            get {
                return this.AddressExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressExtensionField, value) != true)) {
                    this.AddressExtensionField = value;
                    this.RaisePropertyChanged("AddressExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestHubGatewayService.AlarmService.AlarmStatus AlarmStatus {
            get {
                return this.AlarmStatusField;
            }
            set {
                if ((this.AlarmStatusField.Equals(value) != true)) {
                    this.AlarmStatusField = value;
                    this.RaisePropertyChanged("AlarmStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClearedTime {
            get {
                return this.ClearedTimeField;
            }
            set {
                if ((this.ClearedTimeField.Equals(value) != true)) {
                    this.ClearedTimeField = value;
                    this.RaisePropertyChanged("ClearedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationTime {
            get {
                return this.CreationTimeField;
            }
            set {
                if ((this.CreationTimeField.Equals(value) != true)) {
                    this.CreationTimeField = value;
                    this.RaisePropertyChanged("CreationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceDescription {
            get {
                return this.DeviceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceDescriptionField, value) != true)) {
                    this.DeviceDescriptionField = value;
                    this.RaisePropertyChanged("DeviceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceType {
            get {
                return this.DeviceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceTypeField, value) != true)) {
                    this.DeviceTypeField = value;
                    this.RaisePropertyChanged("DeviceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NodeElementId {
            get {
                return this.NodeElementIdField;
            }
            set {
                if ((this.NodeElementIdField.Equals(value) != true)) {
                    this.NodeElementIdField = value;
                    this.RaisePropertyChanged("NodeElementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProbableCauseCode {
            get {
                return this.ProbableCauseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProbableCauseCodeField, value) != true)) {
                    this.ProbableCauseCodeField = value;
                    this.RaisePropertyChanged("ProbableCauseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestHubGatewayService.AlarmService.Severity Severity {
            get {
                return this.SeverityField;
            }
            set {
                if ((this.SeverityField.Equals(value) != true)) {
                    this.SeverityField = value;
                    this.RaisePropertyChanged("Severity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShelterDescription {
            get {
                return this.ShelterDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShelterDescriptionField, value) != true)) {
                    this.ShelterDescriptionField = value;
                    this.RaisePropertyChanged("ShelterDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceElementId {
            get {
                return this.SourceElementIdField;
            }
            set {
                if ((this.SourceElementIdField.Equals(value) != true)) {
                    this.SourceElementIdField = value;
                    this.RaisePropertyChanged("SourceElementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((this.TypeCodeField.Equals(value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmStatus", Namespace="http://schemas.datacontract.org/2004/07/Siskon.Alarm.Domain.Model.HubInterfaces.D" +
        "TO")]
    public enum AlarmStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClearedBySourceDisconnection = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Severity", Namespace="http://schemas.datacontract.org/2004/07/Siskon.Alarm.Domain.Model.HubInterfaces.D" +
        "TO")]
    public enum Severity : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Critical = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Major = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Minor = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Information = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NodeAlarmStatusDto", Namespace="http://schemas.datacontract.org/2004/07/Siskon.Device.Domain.Model.HubInterfaces." +
        "DTO")]
    [System.SerializableAttribute()]
    public partial class NodeAlarmStatusDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestHubGatewayService.AlarmService.AlarmStatus1 AlarmStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NodeElementIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestHubGatewayService.AlarmService.AlarmStatus1 AlarmStatus {
            get {
                return this.AlarmStatusField;
            }
            set {
                if ((this.AlarmStatusField.Equals(value) != true)) {
                    this.AlarmStatusField = value;
                    this.RaisePropertyChanged("AlarmStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NodeDescription {
            get {
                return this.NodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeDescriptionField, value) != true)) {
                    this.NodeDescriptionField = value;
                    this.RaisePropertyChanged("NodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NodeElementId {
            get {
                return this.NodeElementIdField;
            }
            set {
                if ((this.NodeElementIdField.Equals(value) != true)) {
                    this.NodeElementIdField = value;
                    this.RaisePropertyChanged("NodeElementId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmStatus", Namespace="http://schemas.datacontract.org/2004/07/Siskon.Device.Domain.Model.HubInterfaces." +
        "DTO")]
    public enum AlarmStatus1 : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Critic = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Major = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Minor = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Clean = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShelterAlarmStatusDto", Namespace="http://schemas.datacontract.org/2004/07/Siskon.Device.Domain.Model.HubInterfaces." +
        "DTO")]
    [System.SerializableAttribute()]
    public partial class ShelterAlarmStatusDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestHubGatewayService.AlarmService.AlarmStatus1 AlarmStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShelterDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShelterElementIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestHubGatewayService.AlarmService.AlarmStatus1 AlarmStatus {
            get {
                return this.AlarmStatusField;
            }
            set {
                if ((this.AlarmStatusField.Equals(value) != true)) {
                    this.AlarmStatusField = value;
                    this.RaisePropertyChanged("AlarmStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NodeDescription {
            get {
                return this.NodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeDescriptionField, value) != true)) {
                    this.NodeDescriptionField = value;
                    this.RaisePropertyChanged("NodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NodeId {
            get {
                return this.NodeIdField;
            }
            set {
                if ((this.NodeIdField.Equals(value) != true)) {
                    this.NodeIdField = value;
                    this.RaisePropertyChanged("NodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShelterDescription {
            get {
                return this.ShelterDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShelterDescriptionField, value) != true)) {
                    this.ShelterDescriptionField = value;
                    this.RaisePropertyChanged("ShelterDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShelterElementId {
            get {
                return this.ShelterElementIdField;
            }
            set {
                if ((this.ShelterElementIdField.Equals(value) != true)) {
                    this.ShelterElementIdField = value;
                    this.RaisePropertyChanged("ShelterElementId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceAlarmStatusDto", Namespace="http://schemas.datacontract.org/2004/07/Siskon.Device.Domain.Model.HubInterfaces." +
        "DTO")]
    [System.SerializableAttribute()]
    public partial class DeviceAlarmStatusDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestHubGatewayService.AlarmService.AlarmStatus1 AlarmStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceElementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShelterDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestHubGatewayService.AlarmService.AlarmStatus1 AlarmStatus {
            get {
                return this.AlarmStatusField;
            }
            set {
                if ((this.AlarmStatusField.Equals(value) != true)) {
                    this.AlarmStatusField = value;
                    this.RaisePropertyChanged("AlarmStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceDescription {
            get {
                return this.DeviceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceDescriptionField, value) != true)) {
                    this.DeviceDescriptionField = value;
                    this.RaisePropertyChanged("DeviceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceElementId {
            get {
                return this.DeviceElementIdField;
            }
            set {
                if ((this.DeviceElementIdField.Equals(value) != true)) {
                    this.DeviceElementIdField = value;
                    this.RaisePropertyChanged("DeviceElementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NodeDescription {
            get {
                return this.NodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeDescriptionField, value) != true)) {
                    this.NodeDescriptionField = value;
                    this.RaisePropertyChanged("NodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NodeId {
            get {
                return this.NodeIdField;
            }
            set {
                if ((this.NodeIdField.Equals(value) != true)) {
                    this.NodeIdField = value;
                    this.RaisePropertyChanged("NodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShelterDescription {
            get {
                return this.ShelterDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShelterDescriptionField, value) != true)) {
                    this.ShelterDescriptionField = value;
                    this.RaisePropertyChanged("ShelterDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceConnectionStatusDto", Namespace="http://schemas.datacontract.org/2004/07/Siskon.Device.Domain.Model.HubInterfaces." +
        "DTO")]
    [System.SerializableAttribute()]
    public partial class DeviceConnectionStatusDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestHubGatewayService.AlarmService.AlarmStatus1 AlarmStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestHubGatewayService.AlarmService.ConnectionStatus ConnectionStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ElementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShelterDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestHubGatewayService.AlarmService.AlarmStatus1 AlarmStatus {
            get {
                return this.AlarmStatusField;
            }
            set {
                if ((this.AlarmStatusField.Equals(value) != true)) {
                    this.AlarmStatusField = value;
                    this.RaisePropertyChanged("AlarmStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestHubGatewayService.AlarmService.ConnectionStatus ConnectionStatus {
            get {
                return this.ConnectionStatusField;
            }
            set {
                if ((this.ConnectionStatusField.Equals(value) != true)) {
                    this.ConnectionStatusField = value;
                    this.RaisePropertyChanged("ConnectionStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceDescription {
            get {
                return this.DeviceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceDescriptionField, value) != true)) {
                    this.DeviceDescriptionField = value;
                    this.RaisePropertyChanged("DeviceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ElementId {
            get {
                return this.ElementIdField;
            }
            set {
                if ((this.ElementIdField.Equals(value) != true)) {
                    this.ElementIdField = value;
                    this.RaisePropertyChanged("ElementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NodeDescription {
            get {
                return this.NodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeDescriptionField, value) != true)) {
                    this.NodeDescriptionField = value;
                    this.RaisePropertyChanged("NodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NodeId {
            get {
                return this.NodeIdField;
            }
            set {
                if ((this.NodeIdField.Equals(value) != true)) {
                    this.NodeIdField = value;
                    this.RaisePropertyChanged("NodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShelterDescription {
            get {
                return this.ShelterDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShelterDescriptionField, value) != true)) {
                    this.ShelterDescriptionField = value;
                    this.RaisePropertyChanged("ShelterDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectionStatus", Namespace="http://schemas.datacontract.org/2004/07/Siskon.Device.Domain.Model.HubInterfaces." +
        "DTO")]
    public enum ConnectionStatus : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Connected = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disconnected = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceEnabilityStatusDto", Namespace="http://schemas.datacontract.org/2004/07/Siskon.Device.Domain.Model.HubInterfaces." +
        "DTO")]
    [System.SerializableAttribute()]
    public partial class DeviceEnabilityStatusDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestHubGatewayService.AlarmService.AlarmStatus1 AlarmStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestHubGatewayService.AlarmService.ConnectionStatus ConnectionStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ElementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeviceEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShelterDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestHubGatewayService.AlarmService.AlarmStatus1 AlarmStatus {
            get {
                return this.AlarmStatusField;
            }
            set {
                if ((this.AlarmStatusField.Equals(value) != true)) {
                    this.AlarmStatusField = value;
                    this.RaisePropertyChanged("AlarmStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestHubGatewayService.AlarmService.ConnectionStatus ConnectionStatus {
            get {
                return this.ConnectionStatusField;
            }
            set {
                if ((this.ConnectionStatusField.Equals(value) != true)) {
                    this.ConnectionStatusField = value;
                    this.RaisePropertyChanged("ConnectionStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceDescription {
            get {
                return this.DeviceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceDescriptionField, value) != true)) {
                    this.DeviceDescriptionField = value;
                    this.RaisePropertyChanged("DeviceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ElementId {
            get {
                return this.ElementIdField;
            }
            set {
                if ((this.ElementIdField.Equals(value) != true)) {
                    this.ElementIdField = value;
                    this.RaisePropertyChanged("ElementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeviceEnabled {
            get {
                return this.IsDeviceEnabledField;
            }
            set {
                if ((this.IsDeviceEnabledField.Equals(value) != true)) {
                    this.IsDeviceEnabledField = value;
                    this.RaisePropertyChanged("IsDeviceEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NodeDescription {
            get {
                return this.NodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeDescriptionField, value) != true)) {
                    this.NodeDescriptionField = value;
                    this.RaisePropertyChanged("NodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NodeId {
            get {
                return this.NodeIdField;
            }
            set {
                if ((this.NodeIdField.Equals(value) != true)) {
                    this.NodeIdField = value;
                    this.RaisePropertyChanged("NodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShelterDescription {
            get {
                return this.ShelterDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShelterDescriptionField, value) != true)) {
                    this.ShelterDescriptionField = value;
                    this.RaisePropertyChanged("ShelterDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhysicalLayerEventDto", Namespace="http://schemas.datacontract.org/2004/07/TasmusNetasSwitch.Domain.Model.CardMonito" +
        "ring.CardMonitoringHubInterfaces.DTO")]
    [System.SerializableAttribute()]
    public partial class PhysicalLayerEventDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ElementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SlotNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ElementId {
            get {
                return this.ElementIdField;
            }
            set {
                if ((this.ElementIdField.Equals(value) != true)) {
                    this.ElementIdField = value;
                    this.RaisePropertyChanged("ElementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PortNumber {
            get {
                return this.PortNumberField;
            }
            set {
                if ((this.PortNumberField.Equals(value) != true)) {
                    this.PortNumberField = value;
                    this.RaisePropertyChanged("PortNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SlotNumber {
            get {
                return this.SlotNumberField;
            }
            set {
                if ((this.SlotNumberField.Equals(value) != true)) {
                    this.SlotNumberField = value;
                    this.RaisePropertyChanged("SlotNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LinkLayerEventDto", Namespace="http://schemas.datacontract.org/2004/07/TasmusNetasSwitch.Domain.Model.CardMonito" +
        "ring.CardMonitoringHubInterfaces.DTO")]
    [System.SerializableAttribute()]
    public partial class LinkLayerEventDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ElementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SlotNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ElementId {
            get {
                return this.ElementIdField;
            }
            set {
                if ((this.ElementIdField.Equals(value) != true)) {
                    this.ElementIdField = value;
                    this.RaisePropertyChanged("ElementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PortNumber {
            get {
                return this.PortNumberField;
            }
            set {
                if ((this.PortNumberField.Equals(value) != true)) {
                    this.PortNumberField = value;
                    this.RaisePropertyChanged("PortNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SlotNumber {
            get {
                return this.SlotNumberField;
            }
            set {
                if ((this.SlotNumberField.Equals(value) != true)) {
                    this.SlotNumberField = value;
                    this.RaisePropertyChanged("SlotNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PvcEventDto", Namespace="http://schemas.datacontract.org/2004/07/TasmusNetasSwitch.Domain.Model.CardMonito" +
        "ring.CardMonitoringHubInterfaces.DTO")]
    [System.SerializableAttribute()]
    public partial class PvcEventDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestHubGatewayService.AlarmService.SwitchSystemInformation DestinationSwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ElementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestHubGatewayService.AlarmService.PvcType PvcTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SlotNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestHubGatewayService.AlarmService.SwitchSystemInformation DestinationSwitch {
            get {
                return this.DestinationSwitchField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationSwitchField, value) != true)) {
                    this.DestinationSwitchField = value;
                    this.RaisePropertyChanged("DestinationSwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ElementId {
            get {
                return this.ElementIdField;
            }
            set {
                if ((this.ElementIdField.Equals(value) != true)) {
                    this.ElementIdField = value;
                    this.RaisePropertyChanged("ElementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PortNumber {
            get {
                return this.PortNumberField;
            }
            set {
                if ((this.PortNumberField.Equals(value) != true)) {
                    this.PortNumberField = value;
                    this.RaisePropertyChanged("PortNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestHubGatewayService.AlarmService.PvcType PvcType {
            get {
                return this.PvcTypeField;
            }
            set {
                if ((this.PvcTypeField.Equals(value) != true)) {
                    this.PvcTypeField = value;
                    this.RaisePropertyChanged("PvcType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SlotNumber {
            get {
                return this.SlotNumberField;
            }
            set {
                if ((this.SlotNumberField.Equals(value) != true)) {
                    this.SlotNumberField = value;
                    this.RaisePropertyChanged("SlotNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SwitchSystemInformation", Namespace="http://schemas.datacontract.org/2004/07/TasmusNetasSwitch.Domain.DTO.SystemSwitch" +
        "es")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestHubGatewayService.AlarmService.NullSwitchSystemInformation))]
    public partial class SwitchSystemInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SwitchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SystemIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SwitchId {
            get {
                return this.SwitchIdField;
            }
            set {
                if ((this.SwitchIdField.Equals(value) != true)) {
                    this.SwitchIdField = value;
                    this.RaisePropertyChanged("SwitchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SystemId {
            get {
                return this.SystemIdField;
            }
            set {
                if ((this.SystemIdField.Equals(value) != true)) {
                    this.SystemIdField = value;
                    this.RaisePropertyChanged("SystemId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PvcType", Namespace="http://schemas.datacontract.org/2004/07/TasmusNetasSwitch.Domain.Model.CardMonito" +
        "ring.CardMonitoringHubInterfaces.DTO")]
    public enum PvcType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rt = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NRt = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ip = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NullSwitchSystemInformation", Namespace="http://schemas.datacontract.org/2004/07/TasmusNetasSwitch.Domain.DTO.SystemSwitch" +
        "es")]
    [System.SerializableAttribute()]
    public partial class NullSwitchSystemInformation : TestHubGatewayService.AlarmService.SwitchSystemInformation {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="CardMonitoringNotificationServiceNamespace", ConfigurationName="AlarmService.CardMonitoringNotificationService")]
    public interface CardMonitoringNotificationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishPhysicalLayerDown", ReplyAction="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishPhysicalLayerDownResponse")]
        void PublishPhysicalLayerDown(TestHubGatewayService.AlarmService.PhysicalLayerEventDto physicalLayerEventDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishPhysicalLayerDown", ReplyAction="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishPhysicalLayerDownResponse")]
        System.Threading.Tasks.Task PublishPhysicalLayerDownAsync(TestHubGatewayService.AlarmService.PhysicalLayerEventDto physicalLayerEventDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishPhysicalLayerUp", ReplyAction="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishPhysicalLayerUpResponse")]
        void PublishPhysicalLayerUp(TestHubGatewayService.AlarmService.PhysicalLayerEventDto physicalLayerEventDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishPhysicalLayerUp", ReplyAction="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishPhysicalLayerUpResponse")]
        System.Threading.Tasks.Task PublishPhysicalLayerUpAsync(TestHubGatewayService.AlarmService.PhysicalLayerEventDto physicalLayerEventDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishLinkLayerDown", ReplyAction="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishLinkLayerDownResponse")]
        void PublishLinkLayerDown(TestHubGatewayService.AlarmService.LinkLayerEventDto linkLayerEventDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishLinkLayerDown", ReplyAction="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishLinkLayerDownResponse")]
        System.Threading.Tasks.Task PublishLinkLayerDownAsync(TestHubGatewayService.AlarmService.LinkLayerEventDto linkLayerEventDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishLinkLayerUp", ReplyAction="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishLinkLayerUpResponse")]
        void PublishLinkLayerUp(TestHubGatewayService.AlarmService.LinkLayerEventDto linkLayerEventDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishLinkLayerUp", ReplyAction="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishLinkLayerUpResponse")]
        System.Threading.Tasks.Task PublishLinkLayerUpAsync(TestHubGatewayService.AlarmService.LinkLayerEventDto linkLayerEventDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishPvcDown", ReplyAction="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishPvcDownResponse")]
        void PublishPvcDown(TestHubGatewayService.AlarmService.PvcEventDto pvcEventDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishPvcDown", ReplyAction="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishPvcDownResponse")]
        System.Threading.Tasks.Task PublishPvcDownAsync(TestHubGatewayService.AlarmService.PvcEventDto pvcEventDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishPvcUp", ReplyAction="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishPvcUpResponse")]
        void PublishPvcUp(TestHubGatewayService.AlarmService.PvcEventDto pvcEventDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishPvcUp", ReplyAction="CardMonitoringNotificationServiceNamespace/CardMonitoringNotificationService/Publ" +
            "ishPvcUpResponse")]
        System.Threading.Tasks.Task PublishPvcUpAsync(TestHubGatewayService.AlarmService.PvcEventDto pvcEventDto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CardMonitoringNotificationServiceChannel : TestHubGatewayService.AlarmService.CardMonitoringNotificationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CardMonitoringNotificationServiceClient : System.ServiceModel.ClientBase<TestHubGatewayService.AlarmService.CardMonitoringNotificationService>, TestHubGatewayService.AlarmService.CardMonitoringNotificationService {
        
        public CardMonitoringNotificationServiceClient() {
        }
        
        public CardMonitoringNotificationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CardMonitoringNotificationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CardMonitoringNotificationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CardMonitoringNotificationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void PublishPhysicalLayerDown(TestHubGatewayService.AlarmService.PhysicalLayerEventDto physicalLayerEventDto) {
            base.Channel.PublishPhysicalLayerDown(physicalLayerEventDto);
        }
        
        public System.Threading.Tasks.Task PublishPhysicalLayerDownAsync(TestHubGatewayService.AlarmService.PhysicalLayerEventDto physicalLayerEventDto) {
            return base.Channel.PublishPhysicalLayerDownAsync(physicalLayerEventDto);
        }
        
        public void PublishPhysicalLayerUp(TestHubGatewayService.AlarmService.PhysicalLayerEventDto physicalLayerEventDto) {
            base.Channel.PublishPhysicalLayerUp(physicalLayerEventDto);
        }
        
        public System.Threading.Tasks.Task PublishPhysicalLayerUpAsync(TestHubGatewayService.AlarmService.PhysicalLayerEventDto physicalLayerEventDto) {
            return base.Channel.PublishPhysicalLayerUpAsync(physicalLayerEventDto);
        }
        
        public void PublishLinkLayerDown(TestHubGatewayService.AlarmService.LinkLayerEventDto linkLayerEventDto) {
            base.Channel.PublishLinkLayerDown(linkLayerEventDto);
        }
        
        public System.Threading.Tasks.Task PublishLinkLayerDownAsync(TestHubGatewayService.AlarmService.LinkLayerEventDto linkLayerEventDto) {
            return base.Channel.PublishLinkLayerDownAsync(linkLayerEventDto);
        }
        
        public void PublishLinkLayerUp(TestHubGatewayService.AlarmService.LinkLayerEventDto linkLayerEventDto) {
            base.Channel.PublishLinkLayerUp(linkLayerEventDto);
        }
        
        public System.Threading.Tasks.Task PublishLinkLayerUpAsync(TestHubGatewayService.AlarmService.LinkLayerEventDto linkLayerEventDto) {
            return base.Channel.PublishLinkLayerUpAsync(linkLayerEventDto);
        }
        
        public void PublishPvcDown(TestHubGatewayService.AlarmService.PvcEventDto pvcEventDto) {
            base.Channel.PublishPvcDown(pvcEventDto);
        }
        
        public System.Threading.Tasks.Task PublishPvcDownAsync(TestHubGatewayService.AlarmService.PvcEventDto pvcEventDto) {
            return base.Channel.PublishPvcDownAsync(pvcEventDto);
        }
        
        public void PublishPvcUp(TestHubGatewayService.AlarmService.PvcEventDto pvcEventDto) {
            base.Channel.PublishPvcUp(pvcEventDto);
        }
        
        public System.Threading.Tasks.Task PublishPvcUpAsync(TestHubGatewayService.AlarmService.PvcEventDto pvcEventDto) {
            return base.Channel.PublishPvcUpAsync(pvcEventDto);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="AlarmNotificationServiceNamespace", ConfigurationName="AlarmService.AlarmNotificationService")]
    public interface AlarmNotificationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="AlarmNotificationServiceNamespace/AlarmNotificationService/PublishAlarmOccurred", ReplyAction="AlarmNotificationServiceNamespace/AlarmNotificationService/PublishAlarmOccurredRe" +
            "sponse")]
        void PublishAlarmOccurred(TestHubGatewayService.AlarmService.ActiveAlarmDto activeAlarmDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="AlarmNotificationServiceNamespace/AlarmNotificationService/PublishAlarmOccurred", ReplyAction="AlarmNotificationServiceNamespace/AlarmNotificationService/PublishAlarmOccurredRe" +
            "sponse")]
        System.Threading.Tasks.Task PublishAlarmOccurredAsync(TestHubGatewayService.AlarmService.ActiveAlarmDto activeAlarmDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="AlarmNotificationServiceNamespace/AlarmNotificationService/PublishAlarmCleared", ReplyAction="AlarmNotificationServiceNamespace/AlarmNotificationService/PublishAlarmClearedRes" +
            "ponse")]
        void PublishAlarmCleared(TestHubGatewayService.AlarmService.ActiveAlarmDto clearedAlarmDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="AlarmNotificationServiceNamespace/AlarmNotificationService/PublishAlarmCleared", ReplyAction="AlarmNotificationServiceNamespace/AlarmNotificationService/PublishAlarmClearedRes" +
            "ponse")]
        System.Threading.Tasks.Task PublishAlarmClearedAsync(TestHubGatewayService.AlarmService.ActiveAlarmDto clearedAlarmDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="AlarmNotificationServiceNamespace/AlarmNotificationService/PublishAlarmUpdated", ReplyAction="AlarmNotificationServiceNamespace/AlarmNotificationService/PublishAlarmUpdatedRes" +
            "ponse")]
        void PublishAlarmUpdated(TestHubGatewayService.AlarmService.ActiveAlarmDto updatedAlarmDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="AlarmNotificationServiceNamespace/AlarmNotificationService/PublishAlarmUpdated", ReplyAction="AlarmNotificationServiceNamespace/AlarmNotificationService/PublishAlarmUpdatedRes" +
            "ponse")]
        System.Threading.Tasks.Task PublishAlarmUpdatedAsync(TestHubGatewayService.AlarmService.ActiveAlarmDto updatedAlarmDto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AlarmNotificationServiceChannel : TestHubGatewayService.AlarmService.AlarmNotificationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AlarmNotificationServiceClient : System.ServiceModel.ClientBase<TestHubGatewayService.AlarmService.AlarmNotificationService>, TestHubGatewayService.AlarmService.AlarmNotificationService {
        
        public AlarmNotificationServiceClient() {
        }
        
        public AlarmNotificationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AlarmNotificationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlarmNotificationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlarmNotificationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void PublishAlarmOccurred(TestHubGatewayService.AlarmService.ActiveAlarmDto activeAlarmDto) {
            base.Channel.PublishAlarmOccurred(activeAlarmDto);
        }
        
        public System.Threading.Tasks.Task PublishAlarmOccurredAsync(TestHubGatewayService.AlarmService.ActiveAlarmDto activeAlarmDto) {
            return base.Channel.PublishAlarmOccurredAsync(activeAlarmDto);
        }
        
        public void PublishAlarmCleared(TestHubGatewayService.AlarmService.ActiveAlarmDto clearedAlarmDto) {
            base.Channel.PublishAlarmCleared(clearedAlarmDto);
        }
        
        public System.Threading.Tasks.Task PublishAlarmClearedAsync(TestHubGatewayService.AlarmService.ActiveAlarmDto clearedAlarmDto) {
            return base.Channel.PublishAlarmClearedAsync(clearedAlarmDto);
        }
        
        public void PublishAlarmUpdated(TestHubGatewayService.AlarmService.ActiveAlarmDto updatedAlarmDto) {
            base.Channel.PublishAlarmUpdated(updatedAlarmDto);
        }
        
        public System.Threading.Tasks.Task PublishAlarmUpdatedAsync(TestHubGatewayService.AlarmService.ActiveAlarmDto updatedAlarmDto) {
            return base.Channel.PublishAlarmUpdatedAsync(updatedAlarmDto);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="DeviceNotificationServiceNamespace", ConfigurationName="AlarmService.DeviceNotificationService")]
    public interface DeviceNotificationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="DeviceNotificationServiceNamespace/DeviceNotificationService/NodeAlarmStatusChang" +
            "ed", ReplyAction="DeviceNotificationServiceNamespace/DeviceNotificationService/NodeAlarmStatusChang" +
            "edResponse")]
        void NodeAlarmStatusChanged(TestHubGatewayService.AlarmService.NodeAlarmStatusDto nodeAlarmStatusDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="DeviceNotificationServiceNamespace/DeviceNotificationService/NodeAlarmStatusChang" +
            "ed", ReplyAction="DeviceNotificationServiceNamespace/DeviceNotificationService/NodeAlarmStatusChang" +
            "edResponse")]
        System.Threading.Tasks.Task NodeAlarmStatusChangedAsync(TestHubGatewayService.AlarmService.NodeAlarmStatusDto nodeAlarmStatusDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="DeviceNotificationServiceNamespace/DeviceNotificationService/ShelterAlarmStatusCh" +
            "anged", ReplyAction="DeviceNotificationServiceNamespace/DeviceNotificationService/ShelterAlarmStatusCh" +
            "angedResponse")]
        void ShelterAlarmStatusChanged(TestHubGatewayService.AlarmService.ShelterAlarmStatusDto shelterAlarmStatusDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="DeviceNotificationServiceNamespace/DeviceNotificationService/ShelterAlarmStatusCh" +
            "anged", ReplyAction="DeviceNotificationServiceNamespace/DeviceNotificationService/ShelterAlarmStatusCh" +
            "angedResponse")]
        System.Threading.Tasks.Task ShelterAlarmStatusChangedAsync(TestHubGatewayService.AlarmService.ShelterAlarmStatusDto shelterAlarmStatusDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="DeviceNotificationServiceNamespace/DeviceNotificationService/DeviceAlarmStatusCha" +
            "nged", ReplyAction="DeviceNotificationServiceNamespace/DeviceNotificationService/DeviceAlarmStatusCha" +
            "ngedResponse")]
        void DeviceAlarmStatusChanged(TestHubGatewayService.AlarmService.DeviceAlarmStatusDto deviceAlarmStatusDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="DeviceNotificationServiceNamespace/DeviceNotificationService/DeviceAlarmStatusCha" +
            "nged", ReplyAction="DeviceNotificationServiceNamespace/DeviceNotificationService/DeviceAlarmStatusCha" +
            "ngedResponse")]
        System.Threading.Tasks.Task DeviceAlarmStatusChangedAsync(TestHubGatewayService.AlarmService.DeviceAlarmStatusDto deviceAlarmStatusDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="DeviceNotificationServiceNamespace/DeviceNotificationService/DeviceConnectionStat" +
            "usChanged", ReplyAction="DeviceNotificationServiceNamespace/DeviceNotificationService/DeviceConnectionStat" +
            "usChangedResponse")]
        void DeviceConnectionStatusChanged(TestHubGatewayService.AlarmService.DeviceConnectionStatusDto deviceConnectionStatusDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="DeviceNotificationServiceNamespace/DeviceNotificationService/DeviceConnectionStat" +
            "usChanged", ReplyAction="DeviceNotificationServiceNamespace/DeviceNotificationService/DeviceConnectionStat" +
            "usChangedResponse")]
        System.Threading.Tasks.Task DeviceConnectionStatusChangedAsync(TestHubGatewayService.AlarmService.DeviceConnectionStatusDto deviceConnectionStatusDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="DeviceNotificationServiceNamespace/DeviceNotificationService/DeviceEnabilityStatu" +
            "sChanged", ReplyAction="DeviceNotificationServiceNamespace/DeviceNotificationService/DeviceEnabilityStatu" +
            "sChangedResponse")]
        void DeviceEnabilityStatusChanged(TestHubGatewayService.AlarmService.DeviceEnabilityStatusDto deviceEnabilityStatusDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="DeviceNotificationServiceNamespace/DeviceNotificationService/DeviceEnabilityStatu" +
            "sChanged", ReplyAction="DeviceNotificationServiceNamespace/DeviceNotificationService/DeviceEnabilityStatu" +
            "sChangedResponse")]
        System.Threading.Tasks.Task DeviceEnabilityStatusChangedAsync(TestHubGatewayService.AlarmService.DeviceEnabilityStatusDto deviceEnabilityStatusDto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DeviceNotificationServiceChannel : TestHubGatewayService.AlarmService.DeviceNotificationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeviceNotificationServiceClient : System.ServiceModel.ClientBase<TestHubGatewayService.AlarmService.DeviceNotificationService>, TestHubGatewayService.AlarmService.DeviceNotificationService {
        
        public DeviceNotificationServiceClient() {
        }
        
        public DeviceNotificationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DeviceNotificationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceNotificationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceNotificationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void NodeAlarmStatusChanged(TestHubGatewayService.AlarmService.NodeAlarmStatusDto nodeAlarmStatusDto) {
            base.Channel.NodeAlarmStatusChanged(nodeAlarmStatusDto);
        }
        
        public System.Threading.Tasks.Task NodeAlarmStatusChangedAsync(TestHubGatewayService.AlarmService.NodeAlarmStatusDto nodeAlarmStatusDto) {
            return base.Channel.NodeAlarmStatusChangedAsync(nodeAlarmStatusDto);
        }
        
        public void ShelterAlarmStatusChanged(TestHubGatewayService.AlarmService.ShelterAlarmStatusDto shelterAlarmStatusDto) {
            base.Channel.ShelterAlarmStatusChanged(shelterAlarmStatusDto);
        }
        
        public System.Threading.Tasks.Task ShelterAlarmStatusChangedAsync(TestHubGatewayService.AlarmService.ShelterAlarmStatusDto shelterAlarmStatusDto) {
            return base.Channel.ShelterAlarmStatusChangedAsync(shelterAlarmStatusDto);
        }
        
        public void DeviceAlarmStatusChanged(TestHubGatewayService.AlarmService.DeviceAlarmStatusDto deviceAlarmStatusDto) {
            base.Channel.DeviceAlarmStatusChanged(deviceAlarmStatusDto);
        }
        
        public System.Threading.Tasks.Task DeviceAlarmStatusChangedAsync(TestHubGatewayService.AlarmService.DeviceAlarmStatusDto deviceAlarmStatusDto) {
            return base.Channel.DeviceAlarmStatusChangedAsync(deviceAlarmStatusDto);
        }
        
        public void DeviceConnectionStatusChanged(TestHubGatewayService.AlarmService.DeviceConnectionStatusDto deviceConnectionStatusDto) {
            base.Channel.DeviceConnectionStatusChanged(deviceConnectionStatusDto);
        }
        
        public System.Threading.Tasks.Task DeviceConnectionStatusChangedAsync(TestHubGatewayService.AlarmService.DeviceConnectionStatusDto deviceConnectionStatusDto) {
            return base.Channel.DeviceConnectionStatusChangedAsync(deviceConnectionStatusDto);
        }
        
        public void DeviceEnabilityStatusChanged(TestHubGatewayService.AlarmService.DeviceEnabilityStatusDto deviceEnabilityStatusDto) {
            base.Channel.DeviceEnabilityStatusChanged(deviceEnabilityStatusDto);
        }
        
        public System.Threading.Tasks.Task DeviceEnabilityStatusChangedAsync(TestHubGatewayService.AlarmService.DeviceEnabilityStatusDto deviceEnabilityStatusDto) {
            return base.Channel.DeviceEnabilityStatusChangedAsync(deviceEnabilityStatusDto);
        }
    }
}
